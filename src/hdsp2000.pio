
.program push_data
.side_set 1

.wrap_target
    irq wait 4     side 1

    set x, (7 - 1) side 1     ; x - dot counter in each column
    out null, 1    side 1     ; purge 1 MSB

loop:
    out pins, 1    side 1     ; set the data pin and pull the clock pin
    jmp x--, loop  side 0     ; next dot in a column

.wrap


.program drive_display

.wrap_target
    
    out x, 32

load_data:
    wait 1 irq 4
    jmp x--, load_data

    out x, 16
    out y, 16
    out pins, 16

column_on:
    jmp x--, column_on

    out pins, 16

column_off:
    jmp y--, column_off

.wrap

% c-sdk {

#include "hardware/clocks.h"


#define HDSP2000_PIO_PUSH_DATA_SM     0
#define HDSP2000_PIO_DRIVE_SM         1

#define HDSP2000_PIO_SM_MASK ((1 << HDSP2000_PIO_PUSH_DATA_SM) | \
                              (1 << HDSP2000_PIO_DRIVE_SM))


static inline void hdsp2000_program_init(PIO pio)
{
    uint8_t i;

    pio_gpio_init(pio, HDSP_CLOCK);
    pio_gpio_init(pio, HDSP_DATA_IN);

    // gpio_set_slew_rate(HDSP_CLOCK, GPIO_SLEW_RATE_SLOW);
 
    for (i = 0; i < 5; i++)
    {
        pio_gpio_init(pio, HDSP_COLUMN1 + i);
    }

    pio_sm_set_consecutive_pindirs(pio, HDSP2000_PIO_PUSH_DATA_SM,
                                   HDSP_CLOCK, 1, true);

    pio_sm_set_consecutive_pindirs(pio, HDSP2000_PIO_PUSH_DATA_SM,
                                   HDSP_DATA_IN, 1, true);

    pio_sm_set_consecutive_pindirs(pio, HDSP2000_PIO_DRIVE_SM,
                                   HDSP_COLUMN1, 5, true);

    pio_sm_config c;
    
    uint offs0 = pio_add_program(pio, &push_data_program);
    c = push_data_program_get_default_config(offs0);
    sm_config_set_out_shift(&c, false, true, 8);
    sm_config_set_out_pins(&c, HDSP_DATA_IN, 1);    
    sm_config_set_set_pins(&c, HDSP_DATA_IN, 1);    
    sm_config_set_sideset_pins(&c, HDSP_CLOCK);
    sm_config_set_clkdiv(&c, 20.0);
    pio_sm_init(pio, HDSP2000_PIO_PUSH_DATA_SM, offs0, &c);

    uint offs1 = pio_add_program(pio, &drive_display_program);
    c = drive_display_program_get_default_config(offs1);
    sm_config_set_out_pins(&c, HDSP_COLUMN1, NCOLUMNS);
    sm_config_set_out_shift(&c, true, true, 32);
    sm_config_set_clkdiv(&c, 125.0);
    pio_sm_init(pio, HDSP2000_PIO_DRIVE_SM, offs1, &c);

    pio_set_sm_mask_enabled(pio, HDSP2000_PIO_SM_MASK, true);
}

%}

